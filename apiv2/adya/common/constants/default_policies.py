from adya.common.constants import constants

default_policies_gsuite = [
{"datasource_id":"","severity":"MEDIUM","name":"GSuite::Documents shared externally","description":"This policy will generate an alert if any document is shared with users outside a domain","created_by":"","trigger_type":constants.PolicyTriggerType.PERMISSION_CHANGE.value,"conditions":[{"match_type":constants.PolicyMatchType.DOCUMENT_EXPOSURE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":constants.EntityExposureType.EXTERNAL.value}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"HIGH","name":"GSuite::Documents shared publicly","description":"This policy will generate an alert if any document is shared publicly","created_by":"","trigger_type":constants.PolicyTriggerType.PERMISSION_CHANGE.value,"conditions":[{"match_type":constants.PolicyMatchType.DOCUMENT_EXPOSURE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":constants.EntityExposureType.PUBLIC.value}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"LOW","name":"GSuite::Documents shared with everyone in domain","description":"This policy will generate an alert if any document is shared with everyone in a domain","created_by":"","trigger_type":constants.PolicyTriggerType.PERMISSION_CHANGE.value,"conditions":[{"match_type":constants.PolicyMatchType.DOCUMENT_EXPOSURE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":constants.EntityExposureType.DOMAIN.value}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":False},
{"datasource_id":"","severity":"HIGH","name":"GSuite::High risk app installed","description":"This policy will generate an alert if any risky app is installed","created_by":"","trigger_type":constants.PolicyTriggerType.APP_INSTALL.value,"conditions":[{"match_type":constants.PolicyMatchType.APP_RISKINESS.value,"match_condition":constants.PolicyConditionMatch.GREATER.value,"match_value":"6"}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"HIGH","name":"GSuite::Documents shared anyone with link","description":"This policy will generate an alert if any document is shared with anyone with link","created_by":"","trigger_type":constants.PolicyTriggerType.PERMISSION_CHANGE.value,"conditions":[{"match_type":constants.PolicyMatchType.DOCUMENT_EXPOSURE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":constants.EntityExposureType.ANYONEWITHLINK.value}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"HIGH","name":"GSuite::New administrator created","description":"This policy will generate an alert if new administrator is created","created_by":"","trigger_type":constants.PolicyTriggerType.NEW_USER.value,"conditions":[{"match_type":constants.PolicyMatchType.USER_ROLE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":"Admin"}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"HIGH","name":"GSuite::External users added to a group","description":"This policy will generate an alert if external users added to a group","created_by":"","trigger_type":constants.PolicyTriggerType.NEW_USER.value,"conditions":[{"match_type":constants.PolicyMatchType.USER_TYPE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":constants.EntityExposureType.EXTERNAL.value}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"MEDIUM","name":"GSuite::Untrusted app installed","description":"This policy will generate an alert if any untrusted app is installed","created_by":"","trigger_type":constants.PolicyTriggerType.APP_INSTALL.value,"conditions":[{"match_type":constants.PolicyMatchType.TRUSTED.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":"False"}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True}

]

default_policies_slack = [
{"datasource_id":"","severity":"HIGH","name":"Slack::Documents shared with public link","description":"This policy will generate an alert if any document is shared with public link","created_by":"","trigger_type":constants.PolicyTriggerType.PERMISSION_CHANGE.value,"conditions":[{"match_type":constants.PolicyMatchType.DOCUMENT_EXPOSURE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":constants.EntityExposureType.ANYONEWITHLINK.value}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"HIGH","name":"Slack::High risk app installed","description":"This policy will generate an alert if any risky app is installed","created_by":"","trigger_type":constants.PolicyTriggerType.APP_INSTALL.value,"conditions":[{"match_type":constants.PolicyMatchType.APP_RISKINESS.value,"match_condition":constants.PolicyConditionMatch.GREATER.value,"match_value":"6"}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"HIGH","name":"Slack::New administrator created","description":"This policy will generate an alert if new administrator is created","created_by":"","trigger_type":constants.PolicyTriggerType.NEW_USER.value,"conditions":[{"match_type":constants.PolicyMatchType.USER_ROLE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":"Admin"}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"HIGH","name":"Slack::External users added to a channel","description":"This policy will generate an alert if external users added to a group","created_by":"","trigger_type":constants.PolicyTriggerType.NEW_USER.value,"conditions":[{"match_type":constants.PolicyMatchType.USER_TYPE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":constants.EntityExposureType.EXTERNAL.value}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"MEDIUM","name":"Slack::Untrusted app installed","description":"This policy will generate an alert if any untrusted app is installed","created_by":"","trigger_type":constants.PolicyTriggerType.APP_INSTALL.value,"conditions":[{"match_type":constants.PolicyMatchType.TRUSTED.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":"False"}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True}


]

default_policies_github = [
{"datasource_id":"","severity":"HIGH","name":"Github::Repository made public","description":"This policy will generate an alert if any repository is made public","created_by":"","trigger_type":constants.PolicyTriggerType.PERMISSION_CHANGE.value,"conditions":[{"match_type":constants.PolicyMatchType.DOCUMENT_EXPOSURE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":constants.EntityExposureType.PUBLIC.value}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True},
{"datasource_id":"","severity":"HIGH","name":"Github::External collaborator added","description":"This policy will generate an alert if any external collaborator is added","created_by":"","trigger_type":constants.PolicyTriggerType.PERMISSION_CHANGE.value,"conditions":[{"match_type":constants.PolicyMatchType.USER_TYPE.value,"match_condition":constants.PolicyConditionMatch.EQUAL.value,"match_value":constants.EntityExposureType.EXTERNAL.value}],"actions":[{"action_type":constants.PolicyActionType.SEND_EMAIL.value,"config":{"to":""}}],"is_active":True}
]


datasource_to_default_policy_map = {
    constants.ConnectorTypes.SLACK.value: default_policies_slack,
    constants.ConnectorTypes.GSUITE.value: default_policies_gsuite,
    constants.ConnectorTypes.GITHUB.value: default_policies_github
}

